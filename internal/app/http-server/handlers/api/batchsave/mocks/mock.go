// Code generated by MockGen. DO NOT EDIT.
// Source: batchsave.go

// Package mock_batchsave is a generated GoMock package.
package mock_batchsave

import (
	reflect "reflect"

	models "github.com/gogapopp/shortener/internal/app/lib/models"
	gomock "github.com/golang/mock/gomock"
)

// MockBatchSaver is a mock of BatchSaver interface.
type MockBatchSaver struct {
	ctrl     *gomock.Controller
	recorder *MockBatchSaverMockRecorder
}

// MockBatchSaverMockRecorder is the mock recorder for MockBatchSaver.
type MockBatchSaverMockRecorder struct {
	mock *MockBatchSaver
}

// NewMockBatchSaver creates a new mock instance.
func NewMockBatchSaver(ctrl *gomock.Controller) *MockBatchSaver {
	mock := &MockBatchSaver{ctrl: ctrl}
	mock.recorder = &MockBatchSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBatchSaver) EXPECT() *MockBatchSaverMockRecorder {
	return m.recorder
}

// BatchInsertURL mocks base method.
func (m *MockBatchSaver) BatchInsertURL(urls []models.BatchDatabaseResponse, userID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchInsertURL", urls, userID)
	ret0, _ := ret[0].(error)
	return ret0
}

// BatchInsertURL indicates an expected call of BatchInsertURL.
func (mr *MockBatchSaverMockRecorder) BatchInsertURL(urls, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchInsertURL", reflect.TypeOf((*MockBatchSaver)(nil).BatchInsertURL), urls, userID)
}
